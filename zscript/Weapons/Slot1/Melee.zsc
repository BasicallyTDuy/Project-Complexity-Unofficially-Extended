class Meleetoken : Inventory { Default { inventory.maxamount 1; }}

class Justbarehands : Justaweapon replaces Fist
{
	int LeftCombo;
	int RightCombo;
	bool HasDoneUpperCut;

	Default
	{
		Weapon.SlotNumber 1;
		Weapon.SlotPriority 10;
		Weapon.Kickback 50;
		Weapon.SelectionOrder 4000;
		Inventory.PickupMessage "Dropping this might be a bad idea.";
		Obituary "%o left some teeth-marks in %k's fist.";
		Tag "$PC_FISTSTAG";
		Inventory.AltHUDIcon "PSTRX0";
		Inventory.PickupSound "Weapons/PunchSwing";
		+INVENTORY.UNDROPPABLE;
		+WEAPON.WIMPY_WEAPON;
		+WEAPON.MELEEWEAPON;
		+WEAPON.NOAUTOFIRE;
	}

	States
	{
	Select:
		TNT1 A 0 A_giveinventory("Meleetoken",1);
		FISM BA 1 A_WeaponReady(WRF_NOFIRE);
		Goto ready;
	Deselect:
		TNT1 A 0 A_takeinventory("Meleetoken",1);
		FISM AB 1;
		TNT1 A 0
		{
			invoker.LeftCombo = 0;
			invoker.RightCombo = 0;
			invoker.HasDoneUppercut = false;
			A_lower();
		}
		wait;
	ReturnFromPunch:
		PUNG A 5 A_WeaponReady(WRF_ALLOWUSER1|WRF_ALLOWUSER2);
		TNT1 A 0
		{
			invoker.LeftCombo = 0;
			invoker.RightCombo = 0;
			invoker.HasDoneUppercut = false;
		}
	Ready:
		PUNG A 1 A_WeaponReady(WRF_ALLOWUSER1|WRF_ALLOWUSER2);
		Loop;
	Fire:
		TNT1 A 0 A_JumpIf(invoker.RightCombo >= 1 && invoker.HasDoneUppercut == false, "Uppercut");
		TNT1 A 0 A_JumpIf(invoker.LeftCombo >= 2, "WideSwingLeft");
		PUNG A 1
			{
				If(CountInv("Power4xDamage"))
				{
					A_startsound("Weapons/quadfire", 5);
				}
				If(CountInv("Chalicedamage"))
				{
					A_startsound("Weapons/quadfire", 5);
				}
			}
		TNT1 A 0
			{
				If (countinv("Powerstrength")==1)
				{
					A_startsound("weapons/BPunchswing",10,0);
				}
				Else
				{
					A_startsound("weapons/Punchswing",10);
				}
			A_Recoil(-1);
			}
		PUNG BC 1;
		PUNG D 4
			 {
				PC_QuakeCamera(3,-5); //A_Quake(2, 2, 0, 5, "")
				invoker.LeftCombo++;
				invoker.RightCombo = 0;
				invoker.HasDoneUppercut = false;
				If (Countinv("Powerexplosions")==1)
				{
					A_CustomPunch (200, true, CPF_NOTURN, "Efistpuff", 70);
				}
				Else if (countinv("Powerstrength")==1)
				{
					A_CustomPunch (200, true, CPF_NOTURN, "Bfistpuff", 70);
				}
				Else
				{
					A_CustomPunch (40, true, CPF_NOTURN, "fistpuff", 70);
				}
			}
		PUNG EFGHIJ 1 A_WeaponReady(WRF_NOPRIMARY);
		Goto returnfrompunch;
	Uppercut:
		PUN5 A 1
			{
				If(CountInv("Power4xDamage"))
				{
					A_startsound("Weapons/quadfire", 5);
				}
				If(CountInv("Chalicedamage"))
				{
					A_startsound("Weapons/quadfire", 5);
				}
			}
		TNT1 A 0
			{
				If (countinv("Powerstrength")==1)
				{
					A_startsound("weapons/BPunchswing",10,0);
				}
				Else
				{
					A_startsound("weapons/Punchswing",10);
				}
			A_Recoil(-1);
			}
		PUN5 BCD 1;
		PUN5 E 4
			 {
				PC_QuakeCamera(3,-5); //A_Quake(2, 2, 0, 5, "")
				invoker.LeftCombo++;
				invoker.HasDoneUppercut = true;
				If (Countinv("Powerexplosions")==1)
				{
					A_CustomPunch (300, true, CPF_NOTURN, "Efistpuff", 70);
				}
				Else if (countinv("Powerstrength")==1)
				{
					A_CustomPunch (300, true, CPF_NOTURN, "Bfistpuff", 70);
				}
				Else
				{
					A_CustomPunch (60, true, CPF_NOTURN, "fistpuff", 70);
				}
			}
		PUN5 FGHIJKL 1 A_WeaponReady(WRF_NOPRIMARY);
		Goto returnfrompunch;
	WideSwingLeft:
		PUN3 A 1
			{
				If(CountInv("Power4xDamage"))
				{
					A_startsound("Weapons/quadfire", 5);
				}
				If(CountInv("Chalicedamage"))
				{
					A_startsound("Weapons/quadfire", 5);
				}
			}
		TNT1 A 0
			{
				If (countinv("Powerstrength")==1)
				{
					A_startsound("weapons/BPunchswing",10,0);
				}
				Else
				{
					A_startsound("weapons/Punchswing",10);
				}
				A_Recoil(-1);
			}
		PUN3 B 1;
		PUN3 C 1
			 {
				PC_QuakeCamera(3,-5); //A_Quake(2, 2, 0, 5, "")
				invoker.RightCombo = 0;
				invoker.LeftCombo = 0;
				If (Countinv("Powerexplosions")==1)
				{
					A_CustomPunch (300, true, CPF_NOTURN, "Efistpuff", 70);
				}
				Else if (countinv("Powerstrength")==1)
				{
					A_CustomPunch (300, true, CPF_NOTURN, "Bfistpuff", 70);
				}
				Else
				{
					A_CustomPunch (60, true, CPF_NOTURN, "fistpuff", 70);
				}
			}
		PUN3 DEF 1 A_WeaponReady(WRF_NOPRIMARY);
		TNT1 A 4 A_WeaponReady(WRF_NOPRIMARY);
		FISM BA 1 A_WeaponReady(WRF_NOPRIMARY);
		Goto returnfrompunch;
	AltFire:
		TNT1 A 0 A_JumpIf(invoker.RightCombo >= 1 && invoker.LeftCombo >= 1, "WideSwingRight");
		PUN2 A 1
			{
				If(CountInv("Power4xDamage"))
				{
					A_startsound("Weapons/quadfire", 5);
				}
				If(CountInv("Chalicedamage"))
				{
					A_startsound("Weapons/quadfire", 5);
				}
			}
		TNT1 A 0
			{
				If (countinv("Powerstrength")==1)
				{
					A_startsound("weapons/BPunchswing",10,0);
				}
				Else
				{
					A_startsound("weapons/Punchswing",10);
				}
				A_Recoil(-1);
			}
		PUN2 BCDE 1;
		PUN2 F 4
			 {
				PC_QuakeCamera(3,5); //A_Quake(2, 2, 0, 5, "")
				invoker.RightCombo++;
				If (Countinv("Powerexplosions")==1)
				{
					A_CustomPunch (250, true, CPF_NOTURN, "Efistpuff", 70);
				}
				Else if (countinv("Powerstrength")==1)
				{
					A_CustomPunch (250, true, CPF_NOTURN, "Bfistpuff", 70);
				}
				Else
				{
					A_CustomPunch (50, true, CPF_NOTURN, "fistpuff", 70);
				}
			}
		PUN2 GHIJKL 1 A_WeaponReady(WRF_NOSECONDARY);
		Goto returnfrompunch;
	WideSwingRight:
		PUN4 A 1
			{
				If(CountInv("Power4xDamage"))
				{
					A_startsound("Weapons/quadfire", 5);
				}
				If(CountInv("Chalicedamage"))
				{
					A_startsound("Weapons/quadfire", 5);
				}
			}
		TNT1 A 0
			{
				If (countinv("Powerstrength")==1)
				{
					A_startsound("weapons/BPunchswing",10,0);
				}
				Else
				{
					A_startsound("weapons/Punchswing",10);
				}
				A_Recoil(-1);
			}
		PUN4 B 1;
		PUN4 C 1
			 {
				PC_QuakeCamera(3,5); //A_Quake(2, 2, 0, 5, "")
				invoker.RightCombo = 0;
				invoker.HasDoneUppercut = false;
				If (Countinv("Powerexplosions")==1)
				{
					A_CustomPunch (300, true, CPF_NOTURN, "Efistpuff", 70);
				}
				Else if (countinv("Powerstrength")==1)
				{
					A_CustomPunch (300, true, CPF_NOTURN, "Bfistpuff", 70);
				}
				Else
				{
					A_CustomPunch (60, true, CPF_NOTURN, "fistpuff", 70);
				}
			}
		PUN4 DEF 1 A_WeaponReady(WRF_NOSECONDARY);
		TNT1 A 4 A_WeaponReady(WRF_NOSECONDARY);
		FISM BA 1 A_WeaponReady(WRF_NOSECONDARY);
		Goto returnfrompunch;
	User1:
		TNT1 A 0 A_JumpIfInventory("HGammo",1,1);
		Goto Ready;
		FISM AB 1;
		Goto nadethrow;
	User2:
		TNT1 A 0 A_JumpIfInventory("Mineammo",1,1);
		Goto Ready;
		FISM AB 1;
		Goto Minethrow;
	Returnstate:
		FISM BA 1;
		Goto Ready;
	Spawn:
		FIST P -1;
		Stop;
	}
}