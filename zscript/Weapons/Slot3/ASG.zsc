class Shellmag : Ammo
{
	Default
	{
	  Inventory.Amount 0;
	  Inventory.MaxAmount 20;
	  Ammo.BackpackAmount 0;
	  Ammo.BackpackMaxAmount 20;
	  Inventory.Icon "SHELLS";
	  +INVENTORY.IGNORESKILL;
  }
}

class Justasaltshotgun : JustaWeapon
{
	Default
	{
		Weapon.AmmoType1 "Shellmag";
		Weapon.AmmoUse1 0;
		Weapon.AmmoGive1 0;
		Weapon.AmmoType2 "Shells";
		Weapon.AmmoUse2 0;
		Weapon.AmmoGive2 10;
		Weapon.Slotnumber 3;
		Weapon.SelectionOrder 1000;
		Weapon.SlotPriority 50;
		Obituary "%k was peppered with automatic shotgun fire.";
		Inventory.PickupSound "Weapon/SAbolt";
		Inventory.Pickupmessage "[3] - \c[brighterOrange]Assault shotgun\c- acquired.";
		Tag "$PC_ASGTAG";
		Inventory.AltHUDIcon "ASGPA0";
		Scale 0.8;
		-Weapon.noautofire;
	}
	States
	{
		spawn:
			ASGP A -1;
			Stop;
		Select:
			A9SM BA 1 A_WeaponReady(WRF_NOFIRE);
			A9SG A 1 A_WeaponReady(WRF_NOFIRE);
			Goto ready;
		Deselect:
			A9SG A 1;
			A9SM AB 1;
			TNT1 A 0 A_lower;
			wait;
		Ready:
			A9SG A 1 A_WeaponReady(WRF_ALLOWZOOM|WRF_ALLOWRELOAD|WRF_ALLOWUSER1|WRF_ALLOWUSER2);
			Loop;
		Dryfire:
			A9SG A 16 A_startsound("Weapons/ShotgunEempty",11);
			A9SG A 4;
			goto ready;
		Fire:
			TNT1 A 0 A_Jumpifinventory("Shellmag",1,1);
			Goto Dryfire;
			TNT1 A 0 
			{
				A_AlertMonsters();
				If(CountInv("Power4xDamage"))
				{
					A_startsound("Weapons/quadfire",5);
				}
				If(CountInv("Chalicedamage"))
				{
					A_startsound("Weapons/quadfire",5);
				}					
				A_startsound("Weapons/SAfire",10);
				A_GunFlash();
			}
			A9SF A 1 BRIGHT A_FireBullets(4.5, 4.5, 10, 10, "ASGpuff",FBF_NORANDOM);
			TNT1 A 0 
			{
				if(CountInv("Guntoken") && random(1,5) == 5)
				{
					A_FireBullets(9.5, 9.5, 10, 10, "ASGpuff",FBF_NORANDOM);
					A_startsound("Gun/Proc",999,0,1);
				}
			}
			TNT1 A 0 
			{
				//Radius_Quake(3,3,0,1,0);
				PC_QuakeCamera(2,4);
				A_FireCustomMissile("GSSpawner2",0,0,0,4);
				A_ZoomFactor(0.99,ZOOM_INSTANT);
			}
			TNT1 A 0 A_JumpIf(GetCvar("Spooks_Norecoil")==1, "Followthrough");
			TNT1 A 0 PC_WeaponRecoil(4,4);
		Followthrough:
			A9SF B 1 BRIGHT A_FireCustomMissile("ASGSSpawner",-6,0,-19,-20,-14);
			TNT1 A 0 
			{
				if(CountInv("Ammotoken") && random(1,5) == 5) 
				{
					A_startsound("ammo/Proc",999,0,0.65);
				}
				else
				{
					A_Takeinventory("Shellmag",1,TIF_NOTAKEINFINITE);
				}
			}
			A9SF C 1;
			A9SF D 1;
			A9SF E 1;
			TNT1 A 0 A_ZoomFactor(0.999);
			A9SG A 1;
			TNT1 A 0 A_ZoomFactor(1.0);
			A9SG A 2;
			A9SG A 1 A_refire("Fire");
			Goto Ready;
		Reload:
			TNT1 A 0 A_JumpIfInventory("Shellmag", 20, 2);
			TNT1 A 0 A_JumpIfInventory("Shells", 1, "Reloadwork");
			A9SG A 1;
			Goto ready;
		ReloadWork:
			TNT1 A 0 A_JumpIfInventory("Shellmag",1,"ReloadWork2");
			TNT1 A 0 A_GiveInventory("ASGChamberloading",1);
		ReloadWork2:
			AUSR ABCDEFG 1;
			AUSR H 2 A_startsound("Weapon/SAMagout",9);
			AUSR IJKLMN 1;
			TNT1 A 0 A_FireCustomMissile("Drumspawner",0,0,10,1-20);
			AUSR N 20;
			AUSR OPQRST 1;
			AUSR U 2 A_startsound("Weapon/SAMAgin",10);
			AUSR W 1;
		Reloadloop:
			TNT1 A 0 A_TakeInventory("Shells",1);
			TNT1 A 0 A_GiveInventory("Shellmag",1);
			TNT1 A 0 A_JumpIfInventory("Shellmag",20,"ReloadFinish");
			TNT1 A 0 A_JumpIfInventory("Shells",1,"Reloadloop");
			Goto ReloadFinish;
		ReloadFinish:
			AUSR X 2;
			TNT1 A 0 A_JumpIfInventory("ASGChamberloading",1,"Reloadcock"); //x to 2 k
			AUS2 KLMNOP 1;
			A9SG A 2;
			Goto ready;
		Reloadcock:
			AUSR XYZ 1;
			AUS2 A 2 A_startsound("Weapons/PUMPB",11);
			AUS2 ABC 1;
			AUS2 C 6;
			TNT1 A 0 A_startsound("Weapons/PUMPF",12);
			AUS2 DEFGHIJKLMNOP 1;
			A9SG A 2;
			TNT1 A 0 A_takeinventory("ASGChamberloading",1);
			Goto Ready;
		Flash:
			TNT1 A 2 A_Light2;
			TNT1 A 2 A_Light1;
			Goto LightDone;
		Zoom:
			A9SG A 1;
			A9SM AB 1;
			Goto Kicking;
		User1:
			TNT1 A 0 A_JumpIfInventory("HGammo",1,1);
			Goto Ready;
			A9SG A 1;
			A9SM AB 1;
			Goto nadethrow;
		User2:
			TNT1 A 0 A_JumpIfInventory("Mineammo",1,1);
			Goto Ready;
			A9SG A 1;
			A9SM AB 1;
			Goto Minethrow;
		Returnstate:
			A9SM BA 1;
			A9SG A 1;
			Goto Ready;
	}
}