class Hammertoken : Inventory{ Default { Inventory.maxamount 1; }}

class Sledgedrop : Actor
{
	Default
	{
	+FLOORCLIP;
	}

States
    {
    Spawn:
        TNT1 A 0 Nodelay
            {
                If (ACS_NamedExecuteWithResult("WeaponSwap",8) ==2)
                 {
                  A_SpawnItemEx("Ammosupply", 0,0,0, 0,0,0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL, 0, tid);
                  }
                Else
                  {
                  A_SpawnItemEx("SledgePickup", 0,0,0, 0,0,0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL, 0, tid);
                  }
            }    
        Stop;
    }
}

class SledgePickup : Custominventory
{
	Default
	{
		Inventory.pickupsound "Weapons/Sledgepickup";
		Inventory.PickupMessage "[1] - \c[Sledgehammercolor]Sledgehammer\c- Acquired.";
		-INVENTORY.ALWAYSPICKUP;
		Scale 1.25;
	}
	States
	{
		Spawn:
			HAMM A -1;
			Stop;
		Pickup:
			TNT1 A 0
				{
				A_Giveinventory("Justabighammer",1);
				A_Giveinventory("Hammertoken",1);
				}
			Stop;
		Nopickup:
			TNT1 A 0;
			Fail;

	}
}





class Justabighammer : Justaweapon
{
	Default
	{
   Weapon.SlotNumber 1;
   Weapon.SlotPriority 30;
   Weapon.SelectionOrder 3;
   Weapon.Kickback 50;
   AttackSound "";
   Inventory.pickupsound "Weapons/Sledgepickup";
   Weapon.UpSound "Weapon/Select";
   Inventory.PickupMessage "[1] - \c[Sledgehammercolor]Sledgehammer\c- Acquired.";
   Obituary "%o had become %K's watermelon when they started their Ggllagher act.";
	Tag "$PC_SLEDGETAG";
	Inventory.AltHUDIcon "HAMMA0";
	+WEAPON.WIMPY_WEAPON;
	+WEAPON.MELEEWEAPON;
	Scale 1.25;
	}

	States
		{
		Spawn:
			HAMM A -1;
			Stop;
		Select:
			SLDM BA 1 A_WeaponReady(WRF_NOFIRE);
			SLDG X 1 A_WeaponReady(WRF_NOFIRE);
			Goto ready;
		Deselect:
			SLDG X 1;
			SLDM AB 1;
			TNT1 A 0 A_lower();
			wait;
		Ready:
			SLDG X 1 A_WeaponReady(WRF_ALLOWZOOM|WRF_ALLOWUSER1|WRF_ALLOWUSER2);
			Loop;
		Fire:
			SLDG X 1 Offset(4,34);
			SLDG X 1 Offset(9,36);
			TNT1 A 0 A_StartSound("Weapons/SledgeFoleyA", CHAN_AUTO, CHANF_DEFAULT, 0.60);
			SLDG X 1 Offset(15,40);
			SLDG X 1 Offset(22,48);
			SLDG X 1 Offset(30,54);
			SLDG X 1 Offset(39,65);
			SLDG X 1 Offset(45,72);
		Hold:
			TNT1 A 0 A_JumpIfInventory("PowerStrength", 1, "PowerHold");
			TNT1 A 8 Offset(1,32) 
				{
						If(CountInv("Power4xDamage"))
							{
							A_PlaySound("Weapons/quadfire", 5);
							}
						If(CountInv("Chalicedamage"))
							{
							A_PlaySound("Weapons/quadfire", 5);
							}
				A_startsound("Weapons/Sledgeswing",30,0,1);
				}
			SLDS A 1 A_SetPitch(pitch + 0.3);
			SLDS A 1 Offset(1,42) A_SetPitch(pitch + 0.6);
			SLDS B 1 Offset(1,46) A_CustomPunch (150, true, CPF_NOTURN, "Sledgepuff", 160);
			SLDS C 1 Offset(1,65) A_SetPitch(pitch + 1.2);
			SLDS D 1 Offset(5,64) A_SetPitch(pitch + 1.8);
			SLDS D 1 Offset(5,80) A_SetPitch(pitch - 2.1);
			TNT1 A 0 A_StartSound("Weapons/SledgeFoleyB", CHAN_AUTO, CHANF_DEFAULT, 0.35);
			TNT1 A 8 A_SetPitch(pitch - 1.0);
			TNT1 A 1 A_Refire;
			SLDG X 1 Offset(45,72);
			SLDG X 1 Offset(39,65);
			TNT1 A 0 A_StartSound("Weapons/SledgeFoleyB", CHAN_AUTO);
			SLDG X 1 Offset(30,54);
			SLDG X 1 Offset(22,48);
			SLDG X 1 Offset(15,40);
			SLDG X 1 Offset(9,36);
			SLDG X 1 Offset(4,34);
			Goto Ready;
		PowerHold:
			TNT1 A 8 Offset(1,32)
				{
					If(CountInv("Power4xDamage"))
						{
						A_PlaySound("Weapons/quadfire", 5);
						}
					If(CountInv("Chalicedamage"))
						{
						A_PlaySound("Weapons/quadfire", 5);
						}	
				A_PlaySound("Weapons/ESledgeSwing", chan_weapon);
				}
			SLDE A 1 A_SetPitch(pitch + 0.3);
			SLDE A 1 Offset(1,42) A_SetPitch(pitch + 0.6);
			SLDE B 1 Offset(1,46)
			 {
				If (Countinv("Powerexplosions")==1)
					{
					A_CustomPunch(300, true, CPF_NOTURN, "SledgeThorpuff", 160);
					}
				Else
					{
					A_CustomPunch(300, true, CPF_NOTURN, "electricSledgepuff", 160);
					}
			 }
			SLDE C 1 Offset(1,65) A_SetPitch(pitch + 1.2);
			SLDE D 1 Offset(5,64) A_SetPitch(pitch + 1.8);
			SLDE D 1 Offset(5,80) A_SetPitch(pitch - 2.1);
			TNT1 A 0 A_StartSound("Weapons/SledgeFoleyB", CHAN_AUTO, CHANF_DEFAULT, 0.35);
			TNT1 A 8 A_SetPitch(pitch - 1.0);
			TNT1 A 1 A_Refire;
			SLDG X 1 Offset(45,72);
			SLDG X 1 Offset(39,65);
			TNT1 A 0 A_StartSound("Weapons/SledgeFoleyB", CHAN_AUTO);
			SLDG X 1 Offset(30,54);
			SLDG X 1 Offset(22,48);
			SLDG X 1 Offset(15,40);
			SLDG X 1 Offset(9,36);
			SLDG X 1 Offset(4,34);
			Goto Ready;
		User1:
			TNT1 A 0 A_JumpIfInventory("HGammo",1,1);
			Goto Ready;
			SLDG X 1;
			SLDM AB 1;
			Goto nadethrow;
		User2:
			TNT1 A 0 A_JumpIfInventory("Mineammo",1,1);
			Goto Ready;
			SLDG X 1;
			SLDM AB 1;
			Goto Minethrow;
		Returnstate:
			SLDM BA 1;
			SLDG X 1;
			Goto Ready;
			}
		}
		
class SledgePuff : Actor
{
	Default
	{
		+NOBLOCKMAP;
		+NOGRAVITY;
		+PUFFONACTORS;
		+MTHRUSPECIES;
		Species "Player";
		damagetype "Sledge";
		RenderStyle "Add";
		Decal "SledgeDent";
	}

	states
	{
	Spawn:
	Melee:
		TNT1 A 1 Nodelay A_PlaySound("Weapons/SledgeHit",5);
		Stop;
		//Goto Actualpuff
	Crash:
		TNT1 A 0 A_PlaySound("Weapons/SledgeWall",5);
		Goto Actualpuff;
	ActualPuff:
		TNT1 A 0 A_Quake(3,10,0,100,"");
		TNT1 AAAAA 0 A_SpawnItemEx("Apuff", 0,0,0, random(-1,1),random(-1,1),random(-1,1), 0, SXF_NOCHECKPOSITION);
		Stop;
	}
}
		
//Stuff for Thorsledge

class SledgeThorpuff : Sledgepuff
{
States
{
	Spawn:
	Melee:
		TNT1 A 0 Nodelay A_PlaySound("Weapons/ESledgeHit",5);
		Goto Actualpuff;
	Crash:
		TNT1 A 0 A_PlaySound("Weapons/ESledgeWall",5);
		Goto Actualpuff;
	ActualPuff:
		TNT1 A 0 
			{
			A_spawnitemex("Sledgelightning",0,0,5,0,0,0);			
			A_explode(200, 500,0,1,450,0,0,"Apuff","Playersledgekaboom");
			}
		Stop;
	}
}