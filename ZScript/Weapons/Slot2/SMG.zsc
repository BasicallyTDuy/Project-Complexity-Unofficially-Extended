class SMGmag : Ammo
{
	Default
	{
	  Inventory.Amount 0;
	  Inventory.MaxAmount 50;
	  Ammo.BackpackAmount 0;
	  Ammo.BackpackMaxAmount 50;
	  Inventory.Icon "CLIPB0";
	  +INVENTORY.IGNORESKILL;
  }
}

class Uzitoken : Inventory { Default { Inventory.maxamount 1; }}

class SMGDrop : Actor
{
	Default
	{
		+FLOORCLIP;
	}
States
    {
    Spawn:
        TNT1 A 0 Nodelay
            {
                If (ACS_NamedExecuteWithResult("WeaponSwap",1) ==2)
                {
                  A_SpawnItemEx("Pbox", 0,0,0, 0,0,0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL, 0, tid);
                  }
                Else
                  {
                  A_SpawnItemEx("SMGPickup", 0,0,0, 0,0,0, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL, 0, tid);
                  }
            }    
        Stop;
    }
}

/*Actor SMGPickup : Custominventory
{
    Inventory.PickupSound "Weapon/Riflecock"
	Inventory.Pickupmessage "[2] - \c[\Yellow]Sub-machinegun\c- acquired."
	Scale 0.75
	States
	{
		Spawn:
			UZII A -1
			Stop	
		Pickup:
			TNT1 A 0
				{
				A_Giveinventory("Uzitoken",1);
				A_Giveinventory("JustaSMG",1);
				A_Takeinventory("Justamachinepistol",1);
				}
			Stop
	}
}*/

class JustaSMG : JustaWeapon
{
	Default
	{
		Weapon.AmmoType1 "Smgmag";
		Weapon.AmmoUse1 0;
		Weapon.AmmoGive1 0;
		Weapon.AmmoType2 "Bullets";
		Weapon.AmmoUse2 0;
		Weapon.AmmoGive2 20;
		Weapon.slotnumber 2;
		Weapon.SelectionOrder 1500;
		Weapon.SlotPriority 50;
		Obituary "%k Was picked off from a distance.";
		Weapon.UpSound "Weapon/Select";
		Inventory.PickupSound "Weapon/Riflecock";
		Inventory.Pickupmessage "[2] - \c[Yellow]Sub-machinegun\c- acquired.";
		Tag "$PC_SMGTAG";
		Inventory.AltHUDIcon "UZIIA0";
		-Weapon.noautofire;
		Scale 0.75;
	}
	States
	{
		Spawn:
			UZII A -1;
			Stop;
		Select:
			UZIM BA 1 A_WeaponReady(WRF_NOFIRE);
			UZIF E 1 A_WeaponReady(WRF_NOFIRE);
			Goto ready;
		Deselect:
			UZIF E 1;
			UZIM AB 1;
			TNT1 A 0 A_lower;
			wait;
		Ready:
			UZIF E 2 A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWZOOM|WRF_ALLOWUSER1|WRF_ALLOWUSER2);
			Loop;
		Dryfire:
			UZIF E 16 A_startsound("Weapons/SMGempty",11,0);
			UZIF E 4;
			Goto ready;
		Fire:
			TNT1 A 0 A_JumpIfInventory("SMGmag",1,1);
			Goto Dryfire;
			TNT1 A 0 
				{
				A_AlertMonsters();
					If(CountInv("Power4xDamage"))
						{
						A_startsound("Weapons/quadfire",5,0);
						}
					If(CountInv("Chalicedamage"))
						{
						A_startsound("Weapons/quadfire",5,0);
						}	
				//A_startsound("Weapons/SMGfire",10,0);
				A_startsound("MPistol/fire",10, CHANF_OVERLAP);
				}
			UZIF A 1 Bright
				{
				A_FireBullets (2.5, 2.5, -1, 15, "Pistolpuff", fbf_norandom);
				A_GunFlash();
				A_FireProjectile("GSSpawner3",0,0,0,8);
				A_FireProjectile("PCspawner",0,0,2,10);
				}
			TNT1 A 0
				 {
				  if(CountInv("Guntoken") && random(1,5) == 5)
					{
					A_FireBullets (5.5, 5.5, -1, 15, "Pistolpuff", fbf_norandom);
					A_startsound("Gun/Proc",999,0,1);
					}
				  }
			TNT1 A 0
				 {
					if(CountInv("Ammotoken") && random(1,5) == 5) 
					{
					A_startsound("ammo/Proc",999,0,0.65);
					}
				else
					{
					A_Takeinventory("SMGmag",1,TIF_NOTAKEINFINITE);
					}
				}
			TNT1 A 0
				{
				A_ZoomFactor(0.99,ZOOM_INSTANT);
				//A_quake(1,2,0,5, "");
				PC_QuakeCamera(2,1);
				}
			TNT1 A 0 A_JumpIf(GetCvar("Spooks_Norecoil")==1, "Followthrough");
			TNT1 A 0 PC_WeaponRecoil(2,2);
		  Followthrough:
			UZIF B 1 Bright A_ZoomFactor(0.999);
			UZIF C 1 A_ZoomFactor(1.0);
			UZIF D 1;
			TNT1 A 0 A_ReFire("Hold");
			UZIF DE 1;
			Goto ready;
		  Hold:
			TNT1 A 0 A_JumpIfInventory("SMGmag",1,1);
			Goto Dryfire;
			TNT1 A 0 
				{
				A_AlertMonsters();
					If(CountInv("Power4xDamage"))
						{
						A_startsound("Weapons/quadfire",5,0);
						}
					If(CountInv("Chalicedamage"))
						{
						A_startsound("Weapons/quadfire",5,0);
						}	
				//A_startsound("Weapons/SMGfire",10,0);
				A_startsound("MPistol/fire",10, CHANF_OVERLAP);
				}
			UZIF A 1 Bright 
				{
				A_FireBullets (4.5, 4.5, -1, 15, "Pistolpuff", fbf_norandom);
				A_GunFlash();
				A_FireProjectile("GSSpawner3",0,0,0,8);
				A_FireProjectile("PCspawner",0,0,2,10);
				}
			TNT1 A 0 
				 {
					if(CountInv("Ammotoken") && random(1,5) == 5) 
					{
					A_startsound("ammo/Proc",999,0,0.65);
					}
				else
					{
					A_Takeinventory("SMGmag",1,TIF_NOTAKEINFINITE);
					}
				}
			TNT1 A 0 
				 {
				  if(CountInv("Guntoken") && random(1,5) == 5)
					{
					A_FireBullets (7.5, 7.5, -1, 15, "Pistolpuff", fbf_norandom);
					A_startsound("Gun/Proc",999,0,1);
					}
				  }
			TNT1 A 0 
				{
				A_ZoomFactor(0.99,ZOOM_INSTANT);
				//A_quake(1,2,0,5, "");
				PC_QuakeCamera(2,1);
				}
			TNT1 A 0 A_JumpIf(GetCvar("Spooks_Norecoil")==1, "HoldFT");
			TNT1 A 0 PC_WeaponRecoil(2,2);
		  HoldFT:
			UZIF B 1 Bright A_ZoomFactor(0.999);
			UZIF C 1 A_ZoomFactor(1.0);
			UZIF D 1;
			TNT1 A 0 A_ReFire("Hold");
			UZIF DE 1;
			Goto ready;
		Flash:
			TNT1 A 2 A_Light2;
			TNT1 A 2 A_Light1;
			Goto LightDone;
		Reload:
			TNT1 A 0 A_JumpIfInventory("SMGmag", 50, 2);
			TNT1 A 0 A_JumpIfInventory("Bullets", 1, "ReloadWork");
			UZIF E 1;
			Goto ready;
		Reloadwork:
			UZIF E 1;
			UZIR ABCD 1;
			TNT1 A 0 A_startsound("weapon/Rmagout",9,0);
			UZIR E 1 A_FireProjectile("Rclipspawner",0,0,0,-10);
			UZIR FGHI 1;
			UZIR I 5;
		 Reloadloop:
			TNT1 A 0 A_TakeInventory("Bullets",1);
			TNT1 A 0 A_GiveInventory("SMGmag",1);
			TNT1 A 0 A_JumpIfInventory("Smgmag",50,"Reloadfinish");
			TNT1 A 0 A_JumpIfInventory("Bullets",1,"Reloadloop");
			goto reloadfinish;
		Reloadfinish:
			UZIR J 2;
			UZIR K 1;
			UZIR L 2 A_startsound("weapon/Rmagin",11,0);
			UZIR M 5;
			UZIR N 2;
			UZIR OPQR 1;
			TNT1 A 0 A_startsound("Pistol/cock",12,0);
			UZIR S 3;
			UZIR TUVWXYZ 1;
			TNT1 A 0 A_startsound("Pistol/release",7);
			UZIR BA 1;
			UZIF E 1 A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWZOOM|WRF_ALLOWUSER1|WRF_ALLOWUSER2);
			Goto Ready;
		User1:
			TNT1 A 0 A_JumpIfInventory("HGammo",1,1);
			Goto Ready;
			UZIF E 1;
			UZIM AB 1;
			Goto nadethrow;
		User2:
			TNT1 A 0 A_JumpIfInventory("Mineammo",1,1);
			Goto Ready;
			UZIF E 1;
			UZIM AB 1;
			Goto Minethrow;
		Returnstate:
			UZIM BA 1;
			UZIF E 1;
			Goto Ready;
		}
	}